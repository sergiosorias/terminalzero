//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 4.0.50826.0
// 
namespace TerminalZeroWebClient.FileTranferReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="FileTranferReference.IFileTransfer")]
    public interface IFileTransfer {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IFileTransfer/DownloadFile", ReplyAction="http://tempuri.org/IFileTransfer/DownloadFileResponse")]
        System.IAsyncResult BeginDownloadFile(TerminalZeroWebClient.FileTranferReference.ServerFileInfo request, System.AsyncCallback callback, object asyncState);
        
        TerminalZeroWebClient.FileTranferReference.RemoteFileInfo EndDownloadFile(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IFileTransfer/UploadFile", ReplyAction="http://tempuri.org/IFileTransfer/UploadFileResponse")]
        System.IAsyncResult BeginUploadFile(TerminalZeroWebClient.FileTranferReference.RemoteFileInfo request, System.AsyncCallback callback, object asyncState);
        
        TerminalZeroWebClient.FileTranferReference.ServerFileInfo EndUploadFile(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IFileTransfer/UploadFileSilverlight", ReplyAction="http://tempuri.org/IFileTransfer/UploadFileSilverlightResponse")]
        System.IAsyncResult BeginUploadFileSilverlight(string fileName, byte[] fileByteStream, System.AsyncCallback callback, object asyncState);
        
        string EndUploadFileSilverlight(System.IAsyncResult result);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ServerFileInfo", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class ServerFileInfo {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string FileName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public bool IsFromDB;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public int Code;
        
        public ServerFileInfo() {
        }
        
        public ServerFileInfo(string FileName, bool IsFromDB, int Code) {
            this.FileName = FileName;
            this.IsFromDB = IsFromDB;
            this.Code = Code;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RemoteFileInfo", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class RemoteFileInfo {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public byte[] FileByteStream;
        
        public RemoteFileInfo() {
        }
        
        public RemoteFileInfo(byte[] FileByteStream) {
            this.FileByteStream = FileByteStream;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFileTransferChannel : TerminalZeroWebClient.FileTranferReference.IFileTransfer, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DownloadFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DownloadFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UploadFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UploadFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool IsFromDB {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        public int Code {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UploadFileSilverlightCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UploadFileSilverlightCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FileTransferClient : System.ServiceModel.ClientBase<TerminalZeroWebClient.FileTranferReference.IFileTransfer>, TerminalZeroWebClient.FileTranferReference.IFileTransfer {
        
        private BeginOperationDelegate onBeginDownloadFileDelegate;
        
        private EndOperationDelegate onEndDownloadFileDelegate;
        
        private System.Threading.SendOrPostCallback onDownloadFileCompletedDelegate;
        
        private BeginOperationDelegate onBeginUploadFileDelegate;
        
        private EndOperationDelegate onEndUploadFileDelegate;
        
        private System.Threading.SendOrPostCallback onUploadFileCompletedDelegate;
        
        private BeginOperationDelegate onBeginUploadFileSilverlightDelegate;
        
        private EndOperationDelegate onEndUploadFileSilverlightDelegate;
        
        private System.Threading.SendOrPostCallback onUploadFileSilverlightCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public FileTransferClient() {
        }
        
        public FileTransferClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FileTransferClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FileTransferClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FileTransferClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<DownloadFileCompletedEventArgs> DownloadFileCompleted;
        
        public event System.EventHandler<UploadFileCompletedEventArgs> UploadFileCompleted;
        
        public event System.EventHandler<UploadFileSilverlightCompletedEventArgs> UploadFileSilverlightCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult TerminalZeroWebClient.FileTranferReference.IFileTransfer.BeginDownloadFile(TerminalZeroWebClient.FileTranferReference.ServerFileInfo request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDownloadFile(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginDownloadFile(string FileName, bool IsFromDB, int Code, System.AsyncCallback callback, object asyncState) {
            TerminalZeroWebClient.FileTranferReference.ServerFileInfo inValue = new TerminalZeroWebClient.FileTranferReference.ServerFileInfo();
            inValue.FileName = FileName;
            inValue.IsFromDB = IsFromDB;
            inValue.Code = Code;
            return ((TerminalZeroWebClient.FileTranferReference.IFileTransfer)(this)).BeginDownloadFile(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TerminalZeroWebClient.FileTranferReference.RemoteFileInfo TerminalZeroWebClient.FileTranferReference.IFileTransfer.EndDownloadFile(System.IAsyncResult result) {
            return base.Channel.EndDownloadFile(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private byte[] EndDownloadFile(System.IAsyncResult result) {
            TerminalZeroWebClient.FileTranferReference.RemoteFileInfo retVal = ((TerminalZeroWebClient.FileTranferReference.IFileTransfer)(this)).EndDownloadFile(result);
            return retVal.FileByteStream;
        }
        
        private System.IAsyncResult OnBeginDownloadFile(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string FileName = ((string)(inValues[0]));
            bool IsFromDB = ((bool)(inValues[1]));
            int Code = ((int)(inValues[2]));
            return this.BeginDownloadFile(FileName, IsFromDB, Code, callback, asyncState);
        }
        
        private object[] OnEndDownloadFile(System.IAsyncResult result) {
            byte[] retVal = this.EndDownloadFile(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDownloadFileCompleted(object state) {
            if ((this.DownloadFileCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DownloadFileCompleted(this, new DownloadFileCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DownloadFileAsync(string FileName, bool IsFromDB, int Code) {
            this.DownloadFileAsync(FileName, IsFromDB, Code, null);
        }
        
        public void DownloadFileAsync(string FileName, bool IsFromDB, int Code, object userState) {
            if ((this.onBeginDownloadFileDelegate == null)) {
                this.onBeginDownloadFileDelegate = new BeginOperationDelegate(this.OnBeginDownloadFile);
            }
            if ((this.onEndDownloadFileDelegate == null)) {
                this.onEndDownloadFileDelegate = new EndOperationDelegate(this.OnEndDownloadFile);
            }
            if ((this.onDownloadFileCompletedDelegate == null)) {
                this.onDownloadFileCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDownloadFileCompleted);
            }
            base.InvokeAsync(this.onBeginDownloadFileDelegate, new object[] {
                        FileName,
                        IsFromDB,
                        Code}, this.onEndDownloadFileDelegate, this.onDownloadFileCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult TerminalZeroWebClient.FileTranferReference.IFileTransfer.BeginUploadFile(TerminalZeroWebClient.FileTranferReference.RemoteFileInfo request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUploadFile(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginUploadFile(byte[] FileByteStream, System.AsyncCallback callback, object asyncState) {
            TerminalZeroWebClient.FileTranferReference.RemoteFileInfo inValue = new TerminalZeroWebClient.FileTranferReference.RemoteFileInfo();
            inValue.FileByteStream = FileByteStream;
            return ((TerminalZeroWebClient.FileTranferReference.IFileTransfer)(this)).BeginUploadFile(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TerminalZeroWebClient.FileTranferReference.ServerFileInfo TerminalZeroWebClient.FileTranferReference.IFileTransfer.EndUploadFile(System.IAsyncResult result) {
            return base.Channel.EndUploadFile(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string EndUploadFile(System.IAsyncResult result, out bool IsFromDB, out int Code) {
            TerminalZeroWebClient.FileTranferReference.ServerFileInfo retVal = ((TerminalZeroWebClient.FileTranferReference.IFileTransfer)(this)).EndUploadFile(result);
            IsFromDB = retVal.IsFromDB;
            Code = retVal.Code;
            return retVal.FileName;
        }
        
        private System.IAsyncResult OnBeginUploadFile(object[] inValues, System.AsyncCallback callback, object asyncState) {
            byte[] FileByteStream = ((byte[])(inValues[0]));
            return this.BeginUploadFile(FileByteStream, callback, asyncState);
        }
        
        private object[] OnEndUploadFile(System.IAsyncResult result) {
            bool IsFromDB = this.GetDefaultValueForInitialization<bool>();
            int Code = this.GetDefaultValueForInitialization<int>();
            string retVal = this.EndUploadFile(result, out IsFromDB, out Code);
            return new object[] {
                    IsFromDB,
                    Code,
                    retVal};
        }
        
        private void OnUploadFileCompleted(object state) {
            if ((this.UploadFileCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UploadFileCompleted(this, new UploadFileCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UploadFileAsync(byte[] FileByteStream) {
            this.UploadFileAsync(FileByteStream, null);
        }
        
        public void UploadFileAsync(byte[] FileByteStream, object userState) {
            if ((this.onBeginUploadFileDelegate == null)) {
                this.onBeginUploadFileDelegate = new BeginOperationDelegate(this.OnBeginUploadFile);
            }
            if ((this.onEndUploadFileDelegate == null)) {
                this.onEndUploadFileDelegate = new EndOperationDelegate(this.OnEndUploadFile);
            }
            if ((this.onUploadFileCompletedDelegate == null)) {
                this.onUploadFileCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUploadFileCompleted);
            }
            base.InvokeAsync(this.onBeginUploadFileDelegate, new object[] {
                        FileByteStream}, this.onEndUploadFileDelegate, this.onUploadFileCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult TerminalZeroWebClient.FileTranferReference.IFileTransfer.BeginUploadFileSilverlight(string fileName, byte[] fileByteStream, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUploadFileSilverlight(fileName, fileByteStream, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string TerminalZeroWebClient.FileTranferReference.IFileTransfer.EndUploadFileSilverlight(System.IAsyncResult result) {
            return base.Channel.EndUploadFileSilverlight(result);
        }
        
        private System.IAsyncResult OnBeginUploadFileSilverlight(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string fileName = ((string)(inValues[0]));
            byte[] fileByteStream = ((byte[])(inValues[1]));
            return ((TerminalZeroWebClient.FileTranferReference.IFileTransfer)(this)).BeginUploadFileSilverlight(fileName, fileByteStream, callback, asyncState);
        }
        
        private object[] OnEndUploadFileSilverlight(System.IAsyncResult result) {
            string retVal = ((TerminalZeroWebClient.FileTranferReference.IFileTransfer)(this)).EndUploadFileSilverlight(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUploadFileSilverlightCompleted(object state) {
            if ((this.UploadFileSilverlightCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UploadFileSilverlightCompleted(this, new UploadFileSilverlightCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UploadFileSilverlightAsync(string fileName, byte[] fileByteStream) {
            this.UploadFileSilverlightAsync(fileName, fileByteStream, null);
        }
        
        public void UploadFileSilverlightAsync(string fileName, byte[] fileByteStream, object userState) {
            if ((this.onBeginUploadFileSilverlightDelegate == null)) {
                this.onBeginUploadFileSilverlightDelegate = new BeginOperationDelegate(this.OnBeginUploadFileSilverlight);
            }
            if ((this.onEndUploadFileSilverlightDelegate == null)) {
                this.onEndUploadFileSilverlightDelegate = new EndOperationDelegate(this.OnEndUploadFileSilverlight);
            }
            if ((this.onUploadFileSilverlightCompletedDelegate == null)) {
                this.onUploadFileSilverlightCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUploadFileSilverlightCompleted);
            }
            base.InvokeAsync(this.onBeginUploadFileSilverlightDelegate, new object[] {
                        fileName,
                        fileByteStream}, this.onEndUploadFileSilverlightDelegate, this.onUploadFileSilverlightCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override TerminalZeroWebClient.FileTranferReference.IFileTransfer CreateChannel() {
            return new FileTransferClientChannel(this);
        }
        
        private class FileTransferClientChannel : ChannelBase<TerminalZeroWebClient.FileTranferReference.IFileTransfer>, TerminalZeroWebClient.FileTranferReference.IFileTransfer {
            
            public FileTransferClientChannel(System.ServiceModel.ClientBase<TerminalZeroWebClient.FileTranferReference.IFileTransfer> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginDownloadFile(TerminalZeroWebClient.FileTranferReference.ServerFileInfo request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("DownloadFile", _args, callback, asyncState);
                return _result;
            }
            
            public TerminalZeroWebClient.FileTranferReference.RemoteFileInfo EndDownloadFile(System.IAsyncResult result) {
                object[] _args = new object[0];
                TerminalZeroWebClient.FileTranferReference.RemoteFileInfo _result = ((TerminalZeroWebClient.FileTranferReference.RemoteFileInfo)(base.EndInvoke("DownloadFile", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUploadFile(TerminalZeroWebClient.FileTranferReference.RemoteFileInfo request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("UploadFile", _args, callback, asyncState);
                return _result;
            }
            
            public TerminalZeroWebClient.FileTranferReference.ServerFileInfo EndUploadFile(System.IAsyncResult result) {
                object[] _args = new object[0];
                TerminalZeroWebClient.FileTranferReference.ServerFileInfo _result = ((TerminalZeroWebClient.FileTranferReference.ServerFileInfo)(base.EndInvoke("UploadFile", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUploadFileSilverlight(string fileName, byte[] fileByteStream, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = fileName;
                _args[1] = fileByteStream;
                System.IAsyncResult _result = base.BeginInvoke("UploadFileSilverlight", _args, callback, asyncState);
                return _result;
            }
            
            public string EndUploadFileSilverlight(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("UploadFileSilverlight", _args, result)));
                return _result;
            }
        }
    }
}
