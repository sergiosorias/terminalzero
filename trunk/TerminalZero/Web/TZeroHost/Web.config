<?xml version="1.0"?>
<configuration>
  <configSections>
  </configSections>
  <appSettings/>
  <connectionStrings>
    <add name="TZeroHost.Properties.Settings.ConfigConn" connectionString="Data Source=sebas-note;Initial Catalog=TZero_Config;Persist Security Info=True;User ID=sa;Password=blanco" providerName="System.Data.SqlClient" />
    <add name="TZeroHost.Properties.Settings.IncomingConn" connectionString="Data Source=sebas-note;Initial Catalog=TZeroIncoming;Persist Security Info=True;User ID=sa;Password=blanco" />
    <add name="TZeroHost.Properties.Settings.UsersConn" connectionString="Data Source=sebas-note;Initial Catalog=TZeroUsers;Persist Security Info=True;User ID=sa;Password=blanco" />
  </connectionStrings>
  <system.web>
    <compilation debug="true" targetFramework="4.0">
    </compilation>
    <!--
            The <authentication> section enables configuration 
            of the security authentication mode used by 
            ASP.NET to identify an incoming user. 
        -->
    <authentication mode="Forms">
      <forms defaultUrl="./Default.aspx"
             loginUrl="./Users/Login.aspx"
             name=".ZeroAuthCookie"
             timeout="90">
      </forms>
    </authentication>
    <authorization>
      <!--<deny users="?" />-->
    </authorization>
    <membership defaultProvider="SqlMembershipProvider" userIsOnlineTimeWindow="90">
      <providers>
        <remove name="AspNetSqlProvider"/>
        <add name="SqlMembershipProvider" type="System.Web.Security.SqlMembershipProvider" 
          connectionStringName="TZeroHost.Properties.Settings.UsersConn"
          enablePasswordRetrieval="true"
          enablePasswordReset="true"
          requiresUniqueEmail="false"
          minRequiredNonalphanumericCharacters="0"
          minRequiredPasswordLength="1"
          requiresQuestionAndAnswer="false"
          passwordFormat="Clear" applicationName="TerminalZeroWeb"/>
      </providers>
    </membership>

    <!--
            The <customErrors> section enables configuration 
            of what to do if/when an unhandled error occurs 
            during the execution of a request. Specifically, 
            it enables developers to configure html error pages 
            to be displayed in place of a error stack trace.
    -->
        <customErrors mode="Off" defaultRedirect="GenericErrorPage.htm">
            <error statusCode="403" redirect="NoAccess.htm" />
            <error statusCode="404" redirect="FileNotFound.htm" />
        </customErrors>
        
    <pages controlRenderingCompatibilityVersion="3.5" clientIDMode="AutoID"/>
    <httpRuntime
      executionTimeout="1200"
      maxRequestLength="102400"
      useFullyQualifiedRedirectUrl="false"
      minFreeThreads="8"
      minLocalRequestFreeThreads="4"
      appRequestQueueLimit="100"/>
  </system.web>
  <!-- 
        The system.webServer section is required for running ASP.NET AJAX under Internet
        Information Services 7.0.  It is not necessary for previous version of IIS.
    -->
  <system.serviceModel>
    <bindings>
      <wsHttpBinding>
        <binding name="myBindingForBigArrays" closeTimeout="00:01:00"
             openTimeout="00:59:00" receiveTimeout="00:59:00" sendTimeout="00:59:00"
             maxBufferPoolSize="67108864" maxReceivedMessageSize="2147483647"
             messageEncoding="Text" textEncoding="utf-8">
          <readerQuotas maxStringContentLength="2147483647" maxArrayLength="2147483647" maxBytesPerRead="2147483647" />
          <security mode="None">
            <transport proxyCredentialType="Basic"/>
          </security>
        </binding>
      </wsHttpBinding>
      <webHttpBinding>
        <binding name="restBindingForBigArrays" closeTimeout="00:01:00" openTimeout="00:59:00" receiveTimeout="00:59:00" sendTimeout="00:59:00" maxBufferSize="67108864" maxBufferPoolSize="67108864" maxReceivedMessageSize="2147483647" transferMode="Streamed">
          <readerQuotas maxStringContentLength="2147483647" maxArrayLength="2147483647" maxBytesPerRead="2147483647"/>
          <security mode="None">
          </security>
        </binding>
      </webHttpBinding>
    </bindings>
    <behaviors>
      <endpointBehaviors>
        <behavior name="behavii">
          <webHttp />
        </behavior>
      </endpointBehaviors>
      <serviceBehaviors>
        <behavior name="Services.ConfigBehavior">
          <serviceMetadata httpGetEnabled="true" />
          <serviceDebug includeExceptionDetailInFaults="true" />
          <serviceCredentials>
            <!--<serviceCertificate findValue="localhost" x509FindType="FindBySubjectName" storeLocation="LocalMachine" storeName="My" />-->
            <userNameAuthentication userNamePasswordValidationMode="MembershipProvider"
                                    membershipProviderName="SqlMembershipProvider" />
          </serviceCredentials>
        </behavior>
      </serviceBehaviors>
    </behaviors>
    <services>
      <service behaviorConfiguration="Services.ConfigBehavior" name="TZeroHost.Services.Sync">
        <endpoint address="" binding="wsHttpBinding" bindingConfiguration="myBindingForBigArrays"
          contract="ZeroCommonClasses.Interfaces.Services.ISyncService">
          <identity>
            <dns value="localhost" />
          </identity>
        </endpoint>
        <endpoint address="rest" behaviorConfiguration="behavii" binding="webHttpBinding"
          contract="ZeroCommonClasses.Interfaces.Services.ISyncService">
          <identity>
            <dns value="localhost" />
          </identity>
        </endpoint>
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
      </service>
      <service behaviorConfiguration="Services.ConfigBehavior" name="TZeroHost.Services.FileTransfer">
        <endpoint address="" binding="wsHttpBinding" bindingConfiguration="myBindingForBigArrays"
          contract="ZeroCommonClasses.Interfaces.Services.IFileTransfer">
          <identity>
            <dns value="localhost" />
          </identity>
        </endpoint>
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
      </service>
      <service behaviorConfiguration="Services.ConfigBehavior" name="TZeroHost.Services.ServiceHelper">
        <endpoint address="" binding="wsHttpBinding" bindingConfiguration="myBindingForBigArrays"
          contract="TZeroHost.Services.ServiceHelper">
          <identity>
            <dns value="localhost" />
          </identity>
        </endpoint>
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
      </service>
    </services>
    <serviceHostingEnvironment aspNetCompatibilityEnabled="false" multipleSiteBindingsEnabled="true" />
  </system.serviceModel>
  <system.diagnostics>
    <sources>
      <source name="System.ServiceModel.MessageLogging" switchValue="Information, ActivityTracing">
        <listeners>
          <add name="ServiceModelMessageLoggingListener"/>
        </listeners>
      </source>
      <source name="System.ServiceModel" switchValue="Error, ActivityTracing" propagateActivity="true">
        <listeners>
          <add name="ServiceModelTraceListener"/>
        </listeners>
      </source>
    </sources>
    <sharedListeners>
      <add initializeData="messages.svclog" type="System.Diagnostics.XmlWriterTraceListener, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="ServiceModelMessageLoggingListener" traceOutputOptions="Timestamp">
      </add>
      <add initializeData="tracelog.svclog" type="System.Diagnostics.XmlWriterTraceListener, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="ServiceModelTraceListener" traceOutputOptions="Timestamp">
      </add>
    </sharedListeners>
    <switches>
      <add name="ZeroLogLevelSwitch" value="2" />
    </switches>
    <trace autoflush="true"/>
  </system.diagnostics>
</configuration>
